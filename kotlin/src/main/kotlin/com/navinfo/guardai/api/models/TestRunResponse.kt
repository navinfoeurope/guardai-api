/**
 * GuardAI Platform API
 *
 * GuardAI is an adversarial security assessment Platform for AI
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@navinfo.eu
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.navinfo.guardai.api.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param completedCount 
 * @param elapsed 
 * @param eta 
 * @param id 
 * @param initiator 
 * @param message 
 * @param name 
 * @param progress 
 * @param projectId 
 * @param startTime 
 * @param status 
 * @param submitCount 
 * @param testId 
 */

data class TestRunResponse (

    @Json(name = "completedCount")
    val completedCount: kotlin.Int? = null,

    @Json(name = "elapsed")
    val elapsed: kotlin.Int? = null,

    @Json(name = "eta")
    val eta: kotlin.Int? = null,

    @Json(name = "id")
    val id: kotlin.Long? = null,

    @Json(name = "initiator")
    val initiator: kotlin.String? = null,

    @Json(name = "message")
    val message: kotlin.String? = null,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "progress")
    val progress: kotlin.Int? = null,

    @Json(name = "projectId")
    val projectId: kotlin.Long? = null,

    @Json(name = "startTime")
    val startTime: java.time.OffsetDateTime? = null,

    @Json(name = "status")
    val status: TestRunResponse.Status? = null,

    @Json(name = "submitCount")
    val submitCount: kotlin.Int? = null,

    @Json(name = "testId")
    val testId: kotlin.Long? = null

) {

    /**
     * 
     *
     * Values: cANCELLED,dONE,eRR,iDLE,iNITIALIZING,rUNNING,sUBMITTED
     */
    enum class Status(val value: kotlin.String) {
        @Json(name = "CANCELLED") cANCELLED("CANCELLED"),
        @Json(name = "DONE") dONE("DONE"),
        @Json(name = "ERR") eRR("ERR"),
        @Json(name = "IDLE") iDLE("IDLE"),
        @Json(name = "INITIALIZING") iNITIALIZING("INITIALIZING"),
        @Json(name = "RUNNING") rUNNING("RUNNING"),
        @Json(name = "SUBMITTED") sUBMITTED("SUBMITTED");
    }
}

